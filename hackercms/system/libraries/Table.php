<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed'); class CI_Table { var $rows = array(); var $heading = array(); var $auto_heading = TRUE; var $caption = NULL; var $template = NULL; var $newline = "\n"; var $empty_cells = ""; var $function = FALSE; public function __construct() { log_message('debug', "Table Class Initialized"); } function set_template($template) { if ( ! is_array($template)) { return FALSE; } $this->template = $template; } function set_heading() { $args = func_get_args(); $this->heading = $this->_prep_args($args); } function make_columns($array = array(), $col_limit = 0) { if ( ! is_array($array) OR count($array) == 0) { return FALSE; } $this->auto_heading = FALSE; if ($col_limit == 0) { return $array; } $new = array(); while (count($array) > 0) { $temp = array_splice($array, 0, $col_limit); if (count($temp) < $col_limit) { for ($i = count($temp); $i < $col_limit; $i++) { $temp[] = '&nbsp;'; } } $new[] = $temp; } return $new; } function set_empty($value) { $this->empty_cells = $value; } function add_row() { $args = func_get_args(); $this->rows[] = $this->_prep_args($args); } function _prep_args($args) { if (isset($args[0]) AND (count($args) == 1 && is_array($args[0]))) { if ( ! isset($args[0]['data'])) { foreach ($args[0] as $key => $val) { if (is_array($val) && isset($val['data'])) { $args[$key] = $val; } else { $args[$key] = array('data' => $val); } } } } else { foreach ($args as $key => $val) { if ( ! is_array($val)) { $args[$key] = array('data' => $val); } } } return $args; } function set_caption($caption) { $this->caption = $caption; } function generate($table_data = NULL) { if ( ! is_null($table_data)) { if (is_object($table_data)) { $this->_set_from_object($table_data); } elseif (is_array($table_data)) { $set_heading = (count($this->heading) == 0 AND $this->auto_heading == FALSE) ? FALSE : TRUE; $this->_set_from_array($table_data, $set_heading); } } if (count($this->heading) == 0 AND count($this->rows) == 0) { return 'Undefined table data'; } $this->_compile_template(); $function = $this->function; $out = $this->template['table_open']; $out .= $this->newline; if ($this->caption) { $out .= $this->newline; $out .= '<caption>' . $this->caption . '</caption>'; $out .= $this->newline; } if (count($this->heading) > 0) { $out .= $this->template['thead_open']; $out .= $this->newline; $out .= $this->template['heading_row_start']; $out .= $this->newline; foreach ($this->heading as $heading) { $temp = $this->template['heading_cell_start']; foreach ($heading as $key => $val) { if ($key != 'data') { $temp = str_replace('<th', "<th $key='$val'", $temp); } } $out .= $temp; $out .= isset($heading['data']) ? $heading['data'] : ''; $out .= $this->template['heading_cell_end']; } $out .= $this->template['heading_row_end']; $out .= $this->newline; $out .= $this->template['thead_close']; $out .= $this->newline; } if (count($this->rows) > 0) { $out .= $this->template['tbody_open']; $out .= $this->newline; $i = 1; foreach ($this->rows as $row) { if ( ! is_array($row)) { break; } $name = (fmod($i++, 2)) ? '' : 'alt_'; $out .= $this->template['row_'.$name.'start']; $out .= $this->newline; foreach ($row as $cell) { $temp = $this->template['cell_'.$name.'start']; foreach ($cell as $key => $val) { if ($key != 'data') { $temp = str_replace('<td', "<td $key='$val'", $temp); } } $cell = isset($cell['data']) ? $cell['data'] : ''; $out .= $temp; if ($cell === "" OR $cell === NULL) { $out .= $this->empty_cells; } else { if ($function !== FALSE && is_callable($function)) { $out .= call_user_func($function, $cell); } else { $out .= $cell; } } $out .= $this->template['cell_'.$name.'end']; } $out .= $this->template['row_'.$name.'end']; $out .= $this->newline; } $out .= $this->template['tbody_close']; $out .= $this->newline; } $out .= $this->template['table_close']; $this->clear(); return $out; } function clear() { $this->rows = array(); $this->heading = array(); $this->auto_heading = TRUE; } function _set_from_object($query) { if ( ! is_object($query)) { return FALSE; } if (count($this->heading) == 0) { if ( ! method_exists($query, 'list_fields')) { return FALSE; } $this->heading = $this->_prep_args($query->list_fields()); } if ($query->num_rows() > 0) { foreach ($query->result_array() as $row) { $this->rows[] = $this->_prep_args($row); } } } function _set_from_array($data, $set_heading = TRUE) { if ( ! is_array($data) OR count($data) == 0) { return FALSE; } $i = 0; foreach ($data as $row) { if ($i == 0 AND count($data) > 1 AND count($this->heading) == 0 AND $set_heading == TRUE) { $this->heading = $this->_prep_args($row); } else { $this->rows[] = $this->_prep_args($row); } $i++; } } function _compile_template() { if ($this->template == NULL) { $this->template = $this->_default_template(); return; } $this->temp = $this->_default_template(); foreach (array('table_open', 'thead_open', 'thead_close', 'heading_row_start', 'heading_row_end', 'heading_cell_start', 'heading_cell_end', 'tbody_open', 'tbody_close', 'row_start', 'row_end', 'cell_start', 'cell_end', 'row_alt_start', 'row_alt_end', 'cell_alt_start', 'cell_alt_end', 'table_close') as $val) { if ( ! isset($this->template[$val])) { $this->template[$val] = $this->temp[$val]; } } } function _default_template() { return array ( 'table_open' => '<table border="0" cellpadding="4" cellspacing="0">', 'thead_open' => '<thead>', 'thead_close' => '</thead>', 'heading_row_start' => '<tr>', 'heading_row_end' => '</tr>', 'heading_cell_start' => '<th>', 'heading_cell_end' => '</th>', 'tbody_open' => '<tbody>', 'tbody_close' => '</tbody>', 'row_start' => '<tr>', 'row_end' => '</tr>', 'cell_start' => '<td>', 'cell_end' => '</td>', 'row_alt_start' => '<tr>', 'row_alt_end' => '</tr>', 'cell_alt_start' => '<td>', 'cell_alt_end' => '</td>', 'table_close' => '</table>' ); } } 
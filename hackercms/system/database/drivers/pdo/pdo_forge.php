<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed'); class CI_DB_pdo_forge extends CI_DB_forge { function _create_database() { if ($this->db->db_debug) { return $this->db->display_error('db_unsuported_feature'); } return FALSE; } function _drop_database($name) { if ($this->db->db_debug) { return $this->db->display_error('db_unsuported_feature'); } return FALSE; } function _create_table($table, $fields, $primary_keys, $keys, $if_not_exists) { $sql = 'CREATE TABLE '; if ($if_not_exists === TRUE) { $sql .= 'IF NOT EXISTS '; } $sql .= $this->db->_escape_identifiers($table)." ("; $current_field_count = 0; foreach ($fields as $field=>$attributes) { if (is_numeric($field)) { $sql .= "\n\t$attributes"; } else { $attributes = array_change_key_case($attributes, CASE_UPPER); $sql .= "\n\t".$this->db->_protect_identifiers($field); $sql .= ' '.$attributes['TYPE']; if (array_key_exists('CONSTRAINT', $attributes)) { $sql .= '('.$attributes['CONSTRAINT'].')'; } if (array_key_exists('UNSIGNED', $attributes) && $attributes['UNSIGNED'] === TRUE) { $sql .= ' UNSIGNED'; } if (array_key_exists('DEFAULT', $attributes)) { $sql .= ' DEFAULT \''.$attributes['DEFAULT'].'\''; } if (array_key_exists('NULL', $attributes) && $attributes['NULL'] === TRUE) { $sql .= ' NULL'; } else { $sql .= ' NOT NULL'; } if (array_key_exists('AUTO_INCREMENT', $attributes) && $attributes['AUTO_INCREMENT'] === TRUE) { $sql .= ' AUTO_INCREMENT'; } } if (++$current_field_count < count($fields)) { $sql .= ','; } } if (count($primary_keys) > 0) { $primary_keys = $this->db->_protect_identifiers($primary_keys); $sql .= ",\n\tPRIMARY KEY (" . implode(', ', $primary_keys) . ")"; } if (is_array($keys) && count($keys) > 0) { foreach ($keys as $key) { if (is_array($key)) { $key = $this->db->_protect_identifiers($key); } else { $key = array($this->db->_protect_identifiers($key)); } $sql .= ",\n\tFOREIGN KEY (" . implode(', ', $key) . ")"; } } $sql .= "\n)"; return $sql; } function _drop_table($table) { if ($this->db->db_debug) { return $this->db->display_error('db_unsuported_feature'); } return FALSE; } function _alter_table($alter_type, $table, $column_name, $column_definition = '', $default_value = '', $null = '', $after_field = '') { $sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table)." $alter_type ".$this->db->_protect_identifiers($column_name); if ($alter_type == 'DROP') { return $sql; } $sql .= " $column_definition"; if ($default_value != '') { $sql .= " DEFAULT \"$default_value\""; } if ($null === NULL) { $sql .= ' NULL'; } else { $sql .= ' NOT NULL'; } if ($after_field != '') { $sql .= ' AFTER ' . $this->db->_protect_identifiers($after_field); } return $sql; } function _rename_table($table_name, $new_table_name) { $sql = 'ALTER TABLE '.$this->db->_protect_identifiers($table_name)." RENAME TO ".$this->db->_protect_identifiers($new_table_name); return $sql; } } 